 ---
- name: Install Nginx, create index.html, restart Nginx, and add user on CentOS
  hosts: all
  become: yes
  become_method: sudo
  become_user: root

  tasks:
    - name: Create index.html
      copy:
        content: "<html><body><h1>Welcome to my Nginx server!</h1></body></html>"
        dest: /usr/share/nginx/html/index.html
        # content [string]
        # When used instead of src, sets the contents of a file directly to the specified value.
        # Works only when dest is a file. Creates the file if it does not exist.
        # For advanced formatting or if content contains a variable, use the ansible.builtin.template module.

    - name: Ensure Nginx is started and enabled
      systemd:
        name: nginx
        state: started
        enabled: yes

    - name: Add user awsuser1
      user:
        name: awsuser1
        state: present
        groups: wheel
        shell: /bin/bash
        append: yes  # 기본 그룹 + gourps에 할당한 그룹 추가

    - name: Ensure wheel group has sudo privileges
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) ALL'
        validate: '/usr/sbin/visudo -cf %s'  # 파일 유효성 검사, 미통과 시 에러

  ---
- name: ansible study
  hosts: nds
  become: yes
  collections:   # 추가 설치한 모듈 사용시 명시해야한다.
    - community.docker 

  vars:  # 이하 내용을 loop로 대입.
    docker_containers:    # loop명 설정시 공백 불가능.
      - name: httpd
        image: httpd:latest
        ports: 
          - "10080:80"  # 인라인으로도 가능하지만 리스트 형태 권장
      
      - name: nginx
        image: nginx:latest
        ports:
          - "20080:80"

    add_repos:
      - name: docker repo
        desc: add docker repo
        URL: https://download.docker.com/linux/centos/docker-ce.repo
      
      - name: terraform repo
        desc: add terraform repo
        URL: https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo         

  tasks:
    - name: add repos
      ansible.builtin.yum_repository:
        name: "{{ item.name }}"
        description: "{{ item.desc }}"
        baseurl: "{{ item.URL }}"
      loop: "{{ add_repos }}"  # vars 선언한 내용 대입. item 항목명 주의.

    - name: install docker collection 
      command:
        cmd: ansible-galaxy collection install community.docker  # 추가 모듈설치
        creates: /etc/yum.repos.d/docker-ce.repo  # 파일이 이미 존재하면 건너뜀
    
    - name: Add port 80/tcp to firewalld
      firewalld:
        port: 80/tcp
        permanent: yes  # 변경 사항 영구 적용
        state: enabled
        immediate: yes  # 변경 사항을 즉시 적용, reload 불필요

    - name: Reload firewalld
      firewalld:
        state: reloaded 
    
    - name: install docker
      yum:
        name: yum-utils
        state: present  # 패키지가 이미 설치되었다면 건너뜀

    - name: install docker 
      yum:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin  # 복수의 패키지 설치
        state: present

    - name: start dodcker
      service:
        name: docker
        state: started
        enable: yes  # 서비스 등록
                  
    - name: install docker collection 
      command:
        cmd: ansible-galaxy collection install community.docker  # 추가 모듈 설치
        creates: /etc/yum.repos.d/docker-ce.repo
        changed_when: "'community.docker' not in lookup('ansible.builtin.shell', 'ansible-galaxy collection list', split_lines=True)"
        # 조건부 변경 명령

    - name: docker pull and run
      community.docker.docker_container:
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        state: started
        ports: "{{ item.ports }}"
        restart_policy: unless-stopped
      loop: "{{ docker_containers }}"
         
  

    - name: Ensure PermitRootLogin is set to no
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'  # 정규표현식, 구문에 #이 ?번 포함.
        line: 'PermitRootLogin no'
        backup: yes  # 수정 전 원본파일을 .bak으로 저장

    - name: Configure SSH to disable root login and change port
      command: sed -i -e 's/PermitRootLogin yes/PermitRootLogin no/' -e 's/#Port 22/Port 12321/' /etc/ssh/sshd_config
      # 구문 치환 cmd

        
